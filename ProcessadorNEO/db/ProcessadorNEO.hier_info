|NEO
clock => blocoControle:controle.clock
clock => blocoOperativo:operavito.clock
reset => blocoControle:controle.reset
entrada_PC[0] << blocoOperativo:operavito.out_entrada_PC[0]
entrada_PC[1] << blocoOperativo:operavito.out_entrada_PC[1]
entrada_PC[2] << blocoOperativo:operavito.out_entrada_PC[2]
entrada_PC[3] << blocoOperativo:operavito.out_entrada_PC[3]
entrada_PC[4] << blocoOperativo:operavito.out_entrada_PC[4]
entrada_PC[5] << blocoOperativo:operavito.out_entrada_PC[5]
entrada_PC[6] << blocoOperativo:operavito.out_entrada_PC[6]
entrada_PC[7] << blocoOperativo:operavito.out_entrada_PC[7]
saida_PC[0] << blocoOperativo:operavito.out_saida_PC[0]
saida_PC[1] << blocoOperativo:operavito.out_saida_PC[1]
saida_PC[2] << blocoOperativo:operavito.out_saida_PC[2]
saida_PC[3] << blocoOperativo:operavito.out_saida_PC[3]
saida_PC[4] << blocoOperativo:operavito.out_saida_PC[4]
saida_PC[5] << blocoOperativo:operavito.out_saida_PC[5]
saida_PC[6] << blocoOperativo:operavito.out_saida_PC[6]
saida_PC[7] << blocoOperativo:operavito.out_saida_PC[7]
saida_MemInstr[0] << blocoOperativo:operavito.out_saida_MemInstr[0]
saida_MemInstr[1] << blocoOperativo:operavito.out_saida_MemInstr[1]
saida_MemInstr[2] << blocoOperativo:operavito.out_saida_MemInstr[2]
saida_MemInstr[3] << blocoOperativo:operavito.out_saida_MemInstr[3]
saida_MemInstr[4] << blocoOperativo:operavito.out_saida_MemInstr[4]
saida_MemInstr[5] << blocoOperativo:operavito.out_saida_MemInstr[5]
saida_MemInstr[6] << blocoOperativo:operavito.out_saida_MemInstr[6]
saida_MemInstr[7] << blocoOperativo:operavito.out_saida_MemInstr[7]
saida_BdRA[0] << blocoOperativo:operavito.out_saida_BdRA[0]
saida_BdRA[1] << blocoOperativo:operavito.out_saida_BdRA[1]
saida_BdRA[2] << blocoOperativo:operavito.out_saida_BdRA[2]
saida_BdRA[3] << blocoOperativo:operavito.out_saida_BdRA[3]
saida_BdRA[4] << blocoOperativo:operavito.out_saida_BdRA[4]
saida_BdRA[5] << blocoOperativo:operavito.out_saida_BdRA[5]
saida_BdRA[6] << blocoOperativo:operavito.out_saida_BdRA[6]
saida_BdRA[7] << blocoOperativo:operavito.out_saida_BdRA[7]
saida_BdRB[0] << blocoOperativo:operavito.out_saida_BdRB[0]
saida_BdRB[1] << blocoOperativo:operavito.out_saida_BdRB[1]
saida_BdRB[2] << blocoOperativo:operavito.out_saida_BdRB[2]
saida_BdRB[3] << blocoOperativo:operavito.out_saida_BdRB[3]
saida_BdRB[4] << blocoOperativo:operavito.out_saida_BdRB[4]
saida_BdRB[5] << blocoOperativo:operavito.out_saida_BdRB[5]
saida_BdRB[6] << blocoOperativo:operavito.out_saida_BdRB[6]
saida_BdRB[7] << blocoOperativo:operavito.out_saida_BdRB[7]
saida_ExtensorSinal2p8[0] << blocoOperativo:operavito.out_saida_ExtensorSinal2p8[0]
saida_ExtensorSinal2p8[1] << blocoOperativo:operavito.out_saida_ExtensorSinal2p8[1]
saida_ExtensorSinal2p8[2] << blocoOperativo:operavito.out_saida_ExtensorSinal2p8[2]
saida_ExtensorSinal2p8[3] << blocoOperativo:operavito.out_saida_ExtensorSinal2p8[3]
saida_ExtensorSinal2p8[4] << blocoOperativo:operavito.out_saida_ExtensorSinal2p8[4]
saida_ExtensorSinal2p8[5] << blocoOperativo:operavito.out_saida_ExtensorSinal2p8[5]
saida_ExtensorSinal2p8[6] << blocoOperativo:operavito.out_saida_ExtensorSinal2p8[6]
saida_ExtensorSinal2p8[7] << blocoOperativo:operavito.out_saida_ExtensorSinal2p8[7]
saida_ExtensorSinal4p8[0] << blocoOperativo:operavito.out_saida_ExtensorSinal4p8[0]
saida_ExtensorSinal4p8[1] << blocoOperativo:operavito.out_saida_ExtensorSinal4p8[1]
saida_ExtensorSinal4p8[2] << blocoOperativo:operavito.out_saida_ExtensorSinal4p8[2]
saida_ExtensorSinal4p8[3] << blocoOperativo:operavito.out_saida_ExtensorSinal4p8[3]
saida_ExtensorSinal4p8[4] << blocoOperativo:operavito.out_saida_ExtensorSinal4p8[4]
saida_ExtensorSinal4p8[5] << blocoOperativo:operavito.out_saida_ExtensorSinal4p8[5]
saida_ExtensorSinal4p8[6] << blocoOperativo:operavito.out_saida_ExtensorSinal4p8[6]
saida_ExtensorSinal4p8[7] << blocoOperativo:operavito.out_saida_ExtensorSinal4p8[7]
saida_RegA[0] << blocoOperativo:operavito.out_saida_RegA[0]
saida_RegA[1] << blocoOperativo:operavito.out_saida_RegA[1]
saida_RegA[2] << blocoOperativo:operavito.out_saida_RegA[2]
saida_RegA[3] << blocoOperativo:operavito.out_saida_RegA[3]
saida_RegA[4] << blocoOperativo:operavito.out_saida_RegA[4]
saida_RegA[5] << blocoOperativo:operavito.out_saida_RegA[5]
saida_RegA[6] << blocoOperativo:operavito.out_saida_RegA[6]
saida_RegA[7] << blocoOperativo:operavito.out_saida_RegA[7]
saida_RegB[0] << blocoOperativo:operavito.out_saida_RegB[0]
saida_RegB[1] << blocoOperativo:operavito.out_saida_RegB[1]
saida_RegB[2] << blocoOperativo:operavito.out_saida_RegB[2]
saida_RegB[3] << blocoOperativo:operavito.out_saida_RegB[3]
saida_RegB[4] << blocoOperativo:operavito.out_saida_RegB[4]
saida_RegB[5] << blocoOperativo:operavito.out_saida_RegB[5]
saida_RegB[6] << blocoOperativo:operavito.out_saida_RegB[6]
saida_RegB[7] << blocoOperativo:operavito.out_saida_RegB[7]
saida_MUXfonteA[0] << blocoOperativo:operavito.out_saida_MUXfonteA[0]
saida_MUXfonteA[1] << blocoOperativo:operavito.out_saida_MUXfonteA[1]
saida_MUXfonteA[2] << blocoOperativo:operavito.out_saida_MUXfonteA[2]
saida_MUXfonteA[3] << blocoOperativo:operavito.out_saida_MUXfonteA[3]
saida_MUXfonteA[4] << blocoOperativo:operavito.out_saida_MUXfonteA[4]
saida_MUXfonteA[5] << blocoOperativo:operavito.out_saida_MUXfonteA[5]
saida_MUXfonteA[6] << blocoOperativo:operavito.out_saida_MUXfonteA[6]
saida_MUXfonteA[7] << blocoOperativo:operavito.out_saida_MUXfonteA[7]
saida_MUXfonteB[0] << blocoOperativo:operavito.out_saida_MUXfonteB[0]
saida_MUXfonteB[1] << blocoOperativo:operavito.out_saida_MUXfonteB[1]
saida_MUXfonteB[2] << blocoOperativo:operavito.out_saida_MUXfonteB[2]
saida_MUXfonteB[3] << blocoOperativo:operavito.out_saida_MUXfonteB[3]
saida_MUXfonteB[4] << blocoOperativo:operavito.out_saida_MUXfonteB[4]
saida_MUXfonteB[5] << blocoOperativo:operavito.out_saida_MUXfonteB[5]
saida_MUXfonteB[6] << blocoOperativo:operavito.out_saida_MUXfonteB[6]
saida_MUXfonteB[7] << blocoOperativo:operavito.out_saida_MUXfonteB[7]
saida_ULA[0] << blocoOperativo:operavito.out_saida_ULA[0]
saida_ULA[1] << blocoOperativo:operavito.out_saida_ULA[1]
saida_ULA[2] << blocoOperativo:operavito.out_saida_ULA[2]
saida_ULA[3] << blocoOperativo:operavito.out_saida_ULA[3]
saida_ULA[4] << blocoOperativo:operavito.out_saida_ULA[4]
saida_ULA[5] << blocoOperativo:operavito.out_saida_ULA[5]
saida_ULA[6] << blocoOperativo:operavito.out_saida_ULA[6]
saida_ULA[7] << blocoOperativo:operavito.out_saida_ULA[7]
saida_RegULAout[0] << blocoOperativo:operavito.out_saida_RegULAout[0]
saida_RegULAout[1] << blocoOperativo:operavito.out_saida_RegULAout[1]
saida_RegULAout[2] << blocoOperativo:operavito.out_saida_RegULAout[2]
saida_RegULAout[3] << blocoOperativo:operavito.out_saida_RegULAout[3]
saida_RegULAout[4] << blocoOperativo:operavito.out_saida_RegULAout[4]
saida_RegULAout[5] << blocoOperativo:operavito.out_saida_RegULAout[5]
saida_RegULAout[6] << blocoOperativo:operavito.out_saida_RegULAout[6]
saida_RegULAout[7] << blocoOperativo:operavito.out_saida_RegULAout[7]
saida_MemDados[0] << blocoOperativo:operavito.out_saida_MemDados[0]
saida_MemDados[1] << blocoOperativo:operavito.out_saida_MemDados[1]
saida_MemDados[2] << blocoOperativo:operavito.out_saida_MemDados[2]
saida_MemDados[3] << blocoOperativo:operavito.out_saida_MemDados[3]
saida_MemDados[4] << blocoOperativo:operavito.out_saida_MemDados[4]
saida_MemDados[5] << blocoOperativo:operavito.out_saida_MemDados[5]
saida_MemDados[6] << blocoOperativo:operavito.out_saida_MemDados[6]
saida_MemDados[7] << blocoOperativo:operavito.out_saida_MemDados[7]
saida_MDR[0] << blocoOperativo:operavito.out_saida_MDR[0]
saida_MDR[1] << blocoOperativo:operavito.out_saida_MDR[1]
saida_MDR[2] << blocoOperativo:operavito.out_saida_MDR[2]
saida_MDR[3] << blocoOperativo:operavito.out_saida_MDR[3]
saida_MDR[4] << blocoOperativo:operavito.out_saida_MDR[4]
saida_MDR[5] << blocoOperativo:operavito.out_saida_MDR[5]
saida_MDR[6] << blocoOperativo:operavito.out_saida_MDR[6]
saida_MDR[7] << blocoOperativo:operavito.out_saida_MDR[7]
saida_MUXbdRegin[0] << blocoOperativo:operavito.out_saida_MUXbdRegin[0]
saida_MUXbdRegin[1] << blocoOperativo:operavito.out_saida_MUXbdRegin[1]
saida_MUXbdRegin[2] << blocoOperativo:operavito.out_saida_MUXbdRegin[2]
saida_MUXbdRegin[3] << blocoOperativo:operavito.out_saida_MUXbdRegin[3]
saida_MUXbdRegin[4] << blocoOperativo:operavito.out_saida_MUXbdRegin[4]
saida_MUXbdRegin[5] << blocoOperativo:operavito.out_saida_MUXbdRegin[5]
saida_MUXbdRegin[6] << blocoOperativo:operavito.out_saida_MUXbdRegin[6]
saida_MUXbdRegin[7] << blocoOperativo:operavito.out_saida_MUXbdRegin[7]
habilitaPC << blocoOperativo:operavito.out_habilitaPC
zeroULA << blocoOperativo:operavito.out_zeroULA
out_estado[0] << blocoControle:controle.out_estado[0]
out_estado[1] << blocoControle:controle.out_estado[1]
out_estado[2] << blocoControle:controle.out_estado[2]


|NEO|blocoControle:controle
clock => atual_estado~1.DATAIN
reset => atual_estado~3.DATAIN
opcode[0] => ULAfonteB.DATAB
opcode[0] => ULAop.DATAB
opcode[0] => Equal0.IN1
opcode[0] => Equal1.IN3
opcode[0] => Equal2.IN3
opcode[0] => Equal3.IN0
opcode[0] => Equal4.IN3
opcode[0] => Equal5.IN1
opcode[0] => Equal6.IN3
opcode[1] => ULAop.DATAB
opcode[1] => Equal0.IN3
opcode[1] => Equal1.IN2
opcode[1] => Equal2.IN0
opcode[1] => Equal3.IN3
opcode[1] => Equal4.IN2
opcode[1] => Equal5.IN3
opcode[1] => Equal6.IN2
opcode[2] => ULAop.DATAB
opcode[2] => Equal0.IN0
opcode[2] => Equal1.IN0
opcode[2] => Equal2.IN2
opcode[2] => Equal3.IN2
opcode[2] => Equal4.IN1
opcode[2] => Equal5.IN2
opcode[2] => Equal6.IN1
opcode[3] => ULAop.DATAB
opcode[3] => Equal0.IN2
opcode[3] => Equal1.IN1
opcode[3] => Equal2.IN1
opcode[3] => Equal3.IN1
opcode[3] => Equal4.IN0
opcode[3] => Equal5.IN0
opcode[3] => Equal6.IN0
PCescCond <= PCescCond.DB_MAX_OUTPUT_PORT_TYPE
PCesc <= PCesc.DB_MAX_OUTPUT_PORT_TYPE
MemParaReg <= MemParaReg.DB_MAX_OUTPUT_PORT_TYPE
regEscrita <= regEscrita.DB_MAX_OUTPUT_PORT_TYPE
ULAfonteA <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
MemLeitura <= comb.DB_MAX_OUTPUT_PORT_TYPE
MemEscrita <= MemEscrita.DB_MAX_OUTPUT_PORT_TYPE
ULAfonteB[0] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
ULAfonteB[1] <= ULAfonteB.DB_MAX_OUTPUT_PORT_TYPE
PCfonte[0] <= <GND>
PCfonte[1] <= PCfonte.DB_MAX_OUTPUT_PORT_TYPE
ULAop[0] <= ULAop.DB_MAX_OUTPUT_PORT_TYPE
ULAop[1] <= ULAop.DB_MAX_OUTPUT_PORT_TYPE
ULAop[2] <= ULAop.DB_MAX_OUTPUT_PORT_TYPE
ULAop[3] <= ULAop.DB_MAX_OUTPUT_PORT_TYPE
out_estado[0] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out_estado[1] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out_estado[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito
clock => registrador:regPC.clock
clock => memoriaInstrucao:memInstrucao.clock
clock => bancoRegistradores:bancoReg.clock
clock => registrador:regA.clock
clock => registrador:regB.clock
clock => registrador:regSaidaUla.clock
clock => MemoriaDados:memoriadedados.clock
clock => registrador:regMDR.clock
PCescCond => habilitaPC.IN1
PCesc => habilitaPC.IN1
MemParaReg => mux_2x8:muxescritanoBDR.selector
regEscrita => bancoRegistradores:bancoReg.enableWrite
ULAfonteA => mux_2x8:muxAEntradaULA.selector
MemEscrita => MemoriaDados:memoriadedados.MemEscrita
ULAfonteB[0] => mux_3x8:muxBEntradaULA.selector[0]
ULAfonteB[1] => mux_3x8:muxBEntradaULA.selector[1]
PCfonte[0] => mux_3x8:muxPCfonte.selector[0]
PCfonte[1] => mux_3x8:muxPCfonte.selector[1]
ULAop[0] => ULA:UnLogArit.selector[0]
ULAop[1] => ULA:UnLogArit.selector[1]
ULAop[2] => ULA:UnLogArit.selector[2]
ULAop[3] => ULA:UnLogArit.selector[3]
opcode[0] <= memoriaInstrucao:memInstrucao.output[4]
opcode[1] <= memoriaInstrucao:memInstrucao.output[5]
opcode[2] <= memoriaInstrucao:memInstrucao.output[6]
opcode[3] <= memoriaInstrucao:memInstrucao.output[7]
out_entrada_PC[0] <= mux_3x8:muxPCfonte.output[0]
out_entrada_PC[1] <= mux_3x8:muxPCfonte.output[1]
out_entrada_PC[2] <= mux_3x8:muxPCfonte.output[2]
out_entrada_PC[3] <= mux_3x8:muxPCfonte.output[3]
out_entrada_PC[4] <= mux_3x8:muxPCfonte.output[4]
out_entrada_PC[5] <= mux_3x8:muxPCfonte.output[5]
out_entrada_PC[6] <= mux_3x8:muxPCfonte.output[6]
out_entrada_PC[7] <= mux_3x8:muxPCfonte.output[7]
out_saida_PC[0] <= registrador:regPC.output[0]
out_saida_PC[1] <= registrador:regPC.output[1]
out_saida_PC[2] <= registrador:regPC.output[2]
out_saida_PC[3] <= registrador:regPC.output[3]
out_saida_PC[4] <= registrador:regPC.output[4]
out_saida_PC[5] <= registrador:regPC.output[5]
out_saida_PC[6] <= registrador:regPC.output[6]
out_saida_PC[7] <= registrador:regPC.output[7]
out_saida_MemInstr[0] <= memoriaInstrucao:memInstrucao.output[0]
out_saida_MemInstr[1] <= memoriaInstrucao:memInstrucao.output[1]
out_saida_MemInstr[2] <= memoriaInstrucao:memInstrucao.output[2]
out_saida_MemInstr[3] <= memoriaInstrucao:memInstrucao.output[3]
out_saida_MemInstr[4] <= memoriaInstrucao:memInstrucao.output[4]
out_saida_MemInstr[5] <= memoriaInstrucao:memInstrucao.output[5]
out_saida_MemInstr[6] <= memoriaInstrucao:memInstrucao.output[6]
out_saida_MemInstr[7] <= memoriaInstrucao:memInstrucao.output[7]
out_saida_BdRA[0] <= bancoRegistradores:bancoReg.data_regA[0]
out_saida_BdRA[1] <= bancoRegistradores:bancoReg.data_regA[1]
out_saida_BdRA[2] <= bancoRegistradores:bancoReg.data_regA[2]
out_saida_BdRA[3] <= bancoRegistradores:bancoReg.data_regA[3]
out_saida_BdRA[4] <= bancoRegistradores:bancoReg.data_regA[4]
out_saida_BdRA[5] <= bancoRegistradores:bancoReg.data_regA[5]
out_saida_BdRA[6] <= bancoRegistradores:bancoReg.data_regA[6]
out_saida_BdRA[7] <= bancoRegistradores:bancoReg.data_regA[7]
out_saida_BdRB[0] <= bancoRegistradores:bancoReg.data_regB[0]
out_saida_BdRB[1] <= bancoRegistradores:bancoReg.data_regB[1]
out_saida_BdRB[2] <= bancoRegistradores:bancoReg.data_regB[2]
out_saida_BdRB[3] <= bancoRegistradores:bancoReg.data_regB[3]
out_saida_BdRB[4] <= bancoRegistradores:bancoReg.data_regB[4]
out_saida_BdRB[5] <= bancoRegistradores:bancoReg.data_regB[5]
out_saida_BdRB[6] <= bancoRegistradores:bancoReg.data_regB[6]
out_saida_BdRB[7] <= bancoRegistradores:bancoReg.data_regB[7]
out_saida_ExtensorSinal2p8[0] <= extensorSinal_2x8:extensorSinal2para8.output[0]
out_saida_ExtensorSinal2p8[1] <= extensorSinal_2x8:extensorSinal2para8.output[1]
out_saida_ExtensorSinal2p8[2] <= extensorSinal_2x8:extensorSinal2para8.output[2]
out_saida_ExtensorSinal2p8[3] <= extensorSinal_2x8:extensorSinal2para8.output[3]
out_saida_ExtensorSinal2p8[4] <= extensorSinal_2x8:extensorSinal2para8.output[4]
out_saida_ExtensorSinal2p8[5] <= extensorSinal_2x8:extensorSinal2para8.output[5]
out_saida_ExtensorSinal2p8[6] <= extensorSinal_2x8:extensorSinal2para8.output[6]
out_saida_ExtensorSinal2p8[7] <= extensorSinal_2x8:extensorSinal2para8.output[7]
out_saida_ExtensorSinal4p8[0] <= extensorSinal_4x8:extensorSinal4para8.output[0]
out_saida_ExtensorSinal4p8[1] <= extensorSinal_4x8:extensorSinal4para8.output[1]
out_saida_ExtensorSinal4p8[2] <= extensorSinal_4x8:extensorSinal4para8.output[2]
out_saida_ExtensorSinal4p8[3] <= extensorSinal_4x8:extensorSinal4para8.output[3]
out_saida_ExtensorSinal4p8[4] <= extensorSinal_4x8:extensorSinal4para8.output[4]
out_saida_ExtensorSinal4p8[5] <= extensorSinal_4x8:extensorSinal4para8.output[5]
out_saida_ExtensorSinal4p8[6] <= extensorSinal_4x8:extensorSinal4para8.output[6]
out_saida_ExtensorSinal4p8[7] <= extensorSinal_4x8:extensorSinal4para8.output[7]
out_saida_RegA[0] <= registrador:regA.output[0]
out_saida_RegA[1] <= registrador:regA.output[1]
out_saida_RegA[2] <= registrador:regA.output[2]
out_saida_RegA[3] <= registrador:regA.output[3]
out_saida_RegA[4] <= registrador:regA.output[4]
out_saida_RegA[5] <= registrador:regA.output[5]
out_saida_RegA[6] <= registrador:regA.output[6]
out_saida_RegA[7] <= registrador:regA.output[7]
out_saida_RegB[0] <= registrador:regB.output[0]
out_saida_RegB[1] <= registrador:regB.output[1]
out_saida_RegB[2] <= registrador:regB.output[2]
out_saida_RegB[3] <= registrador:regB.output[3]
out_saida_RegB[4] <= registrador:regB.output[4]
out_saida_RegB[5] <= registrador:regB.output[5]
out_saida_RegB[6] <= registrador:regB.output[6]
out_saida_RegB[7] <= registrador:regB.output[7]
out_saida_MUXfonteA[0] <= mux_2x8:muxAEntradaULA.output[0]
out_saida_MUXfonteA[1] <= mux_2x8:muxAEntradaULA.output[1]
out_saida_MUXfonteA[2] <= mux_2x8:muxAEntradaULA.output[2]
out_saida_MUXfonteA[3] <= mux_2x8:muxAEntradaULA.output[3]
out_saida_MUXfonteA[4] <= mux_2x8:muxAEntradaULA.output[4]
out_saida_MUXfonteA[5] <= mux_2x8:muxAEntradaULA.output[5]
out_saida_MUXfonteA[6] <= mux_2x8:muxAEntradaULA.output[6]
out_saida_MUXfonteA[7] <= mux_2x8:muxAEntradaULA.output[7]
out_saida_MUXfonteB[0] <= mux_3x8:muxBEntradaULA.output[0]
out_saida_MUXfonteB[1] <= mux_3x8:muxBEntradaULA.output[1]
out_saida_MUXfonteB[2] <= mux_3x8:muxBEntradaULA.output[2]
out_saida_MUXfonteB[3] <= mux_3x8:muxBEntradaULA.output[3]
out_saida_MUXfonteB[4] <= mux_3x8:muxBEntradaULA.output[4]
out_saida_MUXfonteB[5] <= mux_3x8:muxBEntradaULA.output[5]
out_saida_MUXfonteB[6] <= mux_3x8:muxBEntradaULA.output[6]
out_saida_MUXfonteB[7] <= mux_3x8:muxBEntradaULA.output[7]
out_saida_ULA[0] <= ULA:UnLogArit.output[0]
out_saida_ULA[1] <= ULA:UnLogArit.output[1]
out_saida_ULA[2] <= ULA:UnLogArit.output[2]
out_saida_ULA[3] <= ULA:UnLogArit.output[3]
out_saida_ULA[4] <= ULA:UnLogArit.output[4]
out_saida_ULA[5] <= ULA:UnLogArit.output[5]
out_saida_ULA[6] <= ULA:UnLogArit.output[6]
out_saida_ULA[7] <= ULA:UnLogArit.output[7]
out_saida_RegULAout[0] <= registrador:regSaidaUla.output[0]
out_saida_RegULAout[1] <= registrador:regSaidaUla.output[1]
out_saida_RegULAout[2] <= registrador:regSaidaUla.output[2]
out_saida_RegULAout[3] <= registrador:regSaidaUla.output[3]
out_saida_RegULAout[4] <= registrador:regSaidaUla.output[4]
out_saida_RegULAout[5] <= registrador:regSaidaUla.output[5]
out_saida_RegULAout[6] <= registrador:regSaidaUla.output[6]
out_saida_RegULAout[7] <= registrador:regSaidaUla.output[7]
out_saida_MemDados[0] <= MemoriaDados:memoriadedados.dataout[0]
out_saida_MemDados[1] <= MemoriaDados:memoriadedados.dataout[1]
out_saida_MemDados[2] <= MemoriaDados:memoriadedados.dataout[2]
out_saida_MemDados[3] <= MemoriaDados:memoriadedados.dataout[3]
out_saida_MemDados[4] <= MemoriaDados:memoriadedados.dataout[4]
out_saida_MemDados[5] <= MemoriaDados:memoriadedados.dataout[5]
out_saida_MemDados[6] <= MemoriaDados:memoriadedados.dataout[6]
out_saida_MemDados[7] <= MemoriaDados:memoriadedados.dataout[7]
out_saida_MDR[0] <= registrador:regMDR.output[0]
out_saida_MDR[1] <= registrador:regMDR.output[1]
out_saida_MDR[2] <= registrador:regMDR.output[2]
out_saida_MDR[3] <= registrador:regMDR.output[3]
out_saida_MDR[4] <= registrador:regMDR.output[4]
out_saida_MDR[5] <= registrador:regMDR.output[5]
out_saida_MDR[6] <= registrador:regMDR.output[6]
out_saida_MDR[7] <= registrador:regMDR.output[7]
out_saida_MUXbdRegin[0] <= mux_2x8:muxescritanoBDR.output[0]
out_saida_MUXbdRegin[1] <= mux_2x8:muxescritanoBDR.output[1]
out_saida_MUXbdRegin[2] <= mux_2x8:muxescritanoBDR.output[2]
out_saida_MUXbdRegin[3] <= mux_2x8:muxescritanoBDR.output[3]
out_saida_MUXbdRegin[4] <= mux_2x8:muxescritanoBDR.output[4]
out_saida_MUXbdRegin[5] <= mux_2x8:muxescritanoBDR.output[5]
out_saida_MUXbdRegin[6] <= mux_2x8:muxescritanoBDR.output[6]
out_saida_MUXbdRegin[7] <= mux_2x8:muxescritanoBDR.output[7]
out_habilitaPC <= habilitaPC.DB_MAX_OUTPUT_PORT_TYPE
out_zeroULA <= ULA:UnLogArit.zero


|NEO|blocoOperativo:operavito|registrador:regPC
clock => output[0]~reg0.CLK
clock => output[1]~reg0.CLK
clock => output[2]~reg0.CLK
clock => output[3]~reg0.CLK
clock => output[4]~reg0.CLK
clock => output[5]~reg0.CLK
clock => output[6]~reg0.CLK
clock => output[7]~reg0.CLK
enable => output[0]~reg0.ENA
enable => output[1]~reg0.ENA
enable => output[2]~reg0.ENA
enable => output[3]~reg0.ENA
enable => output[4]~reg0.ENA
enable => output[5]~reg0.ENA
enable => output[6]~reg0.ENA
enable => output[7]~reg0.ENA
input[0] => output[0]~reg0.DATAIN
input[1] => output[1]~reg0.DATAIN
input[2] => output[2]~reg0.DATAIN
input[3] => output[3]~reg0.DATAIN
input[4] => output[4]~reg0.DATAIN
input[5] => output[5]~reg0.DATAIN
input[6] => output[6]~reg0.DATAIN
input[7] => output[7]~reg0.DATAIN
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|memoriaInstrucao:memInstrucao
clock => output[0]~reg0.CLK
clock => output[1]~reg0.CLK
clock => output[2]~reg0.CLK
clock => output[3]~reg0.CLK
clock => output[4]~reg0.CLK
clock => output[5]~reg0.CLK
clock => output[6]~reg0.CLK
clock => output[7]~reg0.CLK
endereco[0] => Mux0.IN263
endereco[0] => Mux2.IN263
endereco[0] => Mux3.IN263
endereco[0] => Mux4.IN263
endereco[0] => Mux5.IN263
endereco[0] => Mux6.IN263
endereco[0] => Mux7.IN263
endereco[1] => Mux0.IN262
endereco[1] => Mux1.IN134
endereco[1] => Mux2.IN262
endereco[1] => Mux3.IN262
endereco[1] => Mux4.IN262
endereco[1] => Mux5.IN262
endereco[1] => Mux6.IN262
endereco[1] => Mux7.IN262
endereco[2] => Mux0.IN261
endereco[2] => Mux1.IN133
endereco[2] => Mux2.IN261
endereco[2] => Mux3.IN261
endereco[2] => Mux4.IN261
endereco[2] => Mux5.IN261
endereco[2] => Mux6.IN261
endereco[2] => Mux7.IN261
endereco[3] => Mux0.IN260
endereco[3] => Mux1.IN132
endereco[3] => Mux2.IN260
endereco[3] => Mux3.IN260
endereco[3] => Mux4.IN260
endereco[3] => Mux5.IN260
endereco[3] => Mux6.IN260
endereco[3] => Mux7.IN260
endereco[4] => Mux0.IN259
endereco[4] => Mux1.IN131
endereco[4] => Mux2.IN259
endereco[4] => Mux3.IN259
endereco[4] => Mux4.IN259
endereco[4] => Mux5.IN259
endereco[4] => Mux6.IN259
endereco[4] => Mux7.IN259
endereco[5] => Mux0.IN258
endereco[5] => Mux1.IN130
endereco[5] => Mux2.IN258
endereco[5] => Mux3.IN258
endereco[5] => Mux4.IN258
endereco[5] => Mux5.IN258
endereco[5] => Mux6.IN258
endereco[5] => Mux7.IN258
endereco[6] => Mux0.IN257
endereco[6] => Mux1.IN129
endereco[6] => Mux2.IN257
endereco[6] => Mux3.IN257
endereco[6] => Mux4.IN257
endereco[6] => Mux5.IN257
endereco[6] => Mux6.IN257
endereco[6] => Mux7.IN257
endereco[7] => Mux0.IN256
endereco[7] => Mux1.IN128
endereco[7] => Mux2.IN256
endereco[7] => Mux3.IN256
endereco[7] => Mux4.IN256
endereco[7] => Mux5.IN256
endereco[7] => Mux6.IN256
endereco[7] => Mux7.IN256
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|bancoRegistradores:bancoReg
clock => registrador~10.CLK
clock => registrador~0.CLK
clock => registrador~1.CLK
clock => registrador~2.CLK
clock => registrador~3.CLK
clock => registrador~4.CLK
clock => registrador~5.CLK
clock => registrador~6.CLK
clock => registrador~7.CLK
clock => registrador~8.CLK
clock => registrador~9.CLK
clock => data_regB[0]~reg0.CLK
clock => data_regB[1]~reg0.CLK
clock => data_regB[2]~reg0.CLK
clock => data_regB[3]~reg0.CLK
clock => data_regB[4]~reg0.CLK
clock => data_regB[5]~reg0.CLK
clock => data_regB[6]~reg0.CLK
clock => data_regB[7]~reg0.CLK
clock => data_regA[0]~reg0.CLK
clock => data_regA[1]~reg0.CLK
clock => data_regA[2]~reg0.CLK
clock => data_regA[3]~reg0.CLK
clock => data_regA[4]~reg0.CLK
clock => data_regA[5]~reg0.CLK
clock => data_regA[6]~reg0.CLK
clock => data_regA[7]~reg0.CLK
clock => registrador.CLK0
enableWrite => registrador~10.DATAIN
enableWrite => data_regB[0]~reg0.ENA
enableWrite => data_regB[1]~reg0.ENA
enableWrite => data_regB[2]~reg0.ENA
enableWrite => data_regB[3]~reg0.ENA
enableWrite => data_regB[4]~reg0.ENA
enableWrite => data_regB[5]~reg0.ENA
enableWrite => data_regB[6]~reg0.ENA
enableWrite => data_regB[7]~reg0.ENA
enableWrite => data_regA[0]~reg0.ENA
enableWrite => data_regA[1]~reg0.ENA
enableWrite => data_regA[2]~reg0.ENA
enableWrite => data_regA[3]~reg0.ENA
enableWrite => data_regA[4]~reg0.ENA
enableWrite => data_regA[5]~reg0.ENA
enableWrite => data_regA[6]~reg0.ENA
enableWrite => data_regA[7]~reg0.ENA
enableWrite => registrador.WE
endereco_A[0] => registrador~1.DATAIN
endereco_A[0] => registrador.WADDR
endereco_A[0] => registrador.RADDR
endereco_A[1] => registrador~0.DATAIN
endereco_A[1] => registrador.WADDR1
endereco_A[1] => registrador.RADDR1
endereco_B[0] => registrador.PORTBRADDR
endereco_B[1] => registrador.PORTBRADDR1
datain[0] => registrador~9.DATAIN
datain[0] => registrador.DATAIN
datain[1] => registrador~8.DATAIN
datain[1] => registrador.DATAIN1
datain[2] => registrador~7.DATAIN
datain[2] => registrador.DATAIN2
datain[3] => registrador~6.DATAIN
datain[3] => registrador.DATAIN3
datain[4] => registrador~5.DATAIN
datain[4] => registrador.DATAIN4
datain[5] => registrador~4.DATAIN
datain[5] => registrador.DATAIN5
datain[6] => registrador~3.DATAIN
datain[6] => registrador.DATAIN6
datain[7] => registrador~2.DATAIN
datain[7] => registrador.DATAIN7
data_regA[0] <= data_regA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regA[1] <= data_regA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regA[2] <= data_regA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regA[3] <= data_regA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regA[4] <= data_regA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regA[5] <= data_regA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regA[6] <= data_regA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regA[7] <= data_regA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regB[0] <= data_regB[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regB[1] <= data_regB[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regB[2] <= data_regB[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regB[3] <= data_regB[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regB[4] <= data_regB[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regB[5] <= data_regB[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regB[6] <= data_regB[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_regB[7] <= data_regB[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|extensorSinal_2x8:extensorSinal2para8
input[0] => output[0].DATAIN
input[1] => output[1].DATAIN
output[0] <= input[0].DB_MAX_OUTPUT_PORT_TYPE
output[1] <= input[1].DB_MAX_OUTPUT_PORT_TYPE
output[2] <= <GND>
output[3] <= <GND>
output[4] <= <GND>
output[5] <= <GND>
output[6] <= <GND>
output[7] <= <GND>


|NEO|blocoOperativo:operavito|extensorSinal_4x8:extensorSinal4para8
input[0] => output[0].DATAIN
input[1] => output[1].DATAIN
input[2] => output[2].DATAIN
input[3] => output[3].DATAIN
output[0] <= input[0].DB_MAX_OUTPUT_PORT_TYPE
output[1] <= input[1].DB_MAX_OUTPUT_PORT_TYPE
output[2] <= input[2].DB_MAX_OUTPUT_PORT_TYPE
output[3] <= input[3].DB_MAX_OUTPUT_PORT_TYPE
output[4] <= <GND>
output[5] <= <GND>
output[6] <= <GND>
output[7] <= <GND>


|NEO|blocoOperativo:operavito|registrador:regA
clock => output[0]~reg0.CLK
clock => output[1]~reg0.CLK
clock => output[2]~reg0.CLK
clock => output[3]~reg0.CLK
clock => output[4]~reg0.CLK
clock => output[5]~reg0.CLK
clock => output[6]~reg0.CLK
clock => output[7]~reg0.CLK
enable => output[0]~reg0.ENA
enable => output[1]~reg0.ENA
enable => output[2]~reg0.ENA
enable => output[3]~reg0.ENA
enable => output[4]~reg0.ENA
enable => output[5]~reg0.ENA
enable => output[6]~reg0.ENA
enable => output[7]~reg0.ENA
input[0] => output[0]~reg0.DATAIN
input[1] => output[1]~reg0.DATAIN
input[2] => output[2]~reg0.DATAIN
input[3] => output[3]~reg0.DATAIN
input[4] => output[4]~reg0.DATAIN
input[5] => output[5]~reg0.DATAIN
input[6] => output[6]~reg0.DATAIN
input[7] => output[7]~reg0.DATAIN
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|registrador:regB
clock => output[0]~reg0.CLK
clock => output[1]~reg0.CLK
clock => output[2]~reg0.CLK
clock => output[3]~reg0.CLK
clock => output[4]~reg0.CLK
clock => output[5]~reg0.CLK
clock => output[6]~reg0.CLK
clock => output[7]~reg0.CLK
enable => output[0]~reg0.ENA
enable => output[1]~reg0.ENA
enable => output[2]~reg0.ENA
enable => output[3]~reg0.ENA
enable => output[4]~reg0.ENA
enable => output[5]~reg0.ENA
enable => output[6]~reg0.ENA
enable => output[7]~reg0.ENA
input[0] => output[0]~reg0.DATAIN
input[1] => output[1]~reg0.DATAIN
input[2] => output[2]~reg0.DATAIN
input[3] => output[3]~reg0.DATAIN
input[4] => output[4]~reg0.DATAIN
input[5] => output[5]~reg0.DATAIN
input[6] => output[6]~reg0.DATAIN
input[7] => output[7]~reg0.DATAIN
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|mux_2x8:muxAEntradaULA
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
E0[0] => output.DATAB
E0[1] => output.DATAB
E0[2] => output.DATAB
E0[3] => output.DATAB
E0[4] => output.DATAB
E0[5] => output.DATAB
E0[6] => output.DATAB
E0[7] => output.DATAB
E1[0] => output.DATAA
E1[1] => output.DATAA
E1[2] => output.DATAA
E1[3] => output.DATAA
E1[4] => output.DATAA
E1[5] => output.DATAA
E1[6] => output.DATAA
E1[7] => output.DATAA
output[0] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|mux_3x8:muxBEntradaULA
selector[0] => Mux0.IN2
selector[0] => Mux1.IN2
selector[0] => Mux2.IN2
selector[0] => Mux3.IN2
selector[0] => Mux4.IN2
selector[0] => Mux5.IN2
selector[0] => Mux6.IN2
selector[0] => Mux7.IN2
selector[1] => Mux0.IN1
selector[1] => Mux1.IN1
selector[1] => Mux2.IN1
selector[1] => Mux3.IN1
selector[1] => Mux4.IN1
selector[1] => Mux5.IN1
selector[1] => Mux6.IN1
selector[1] => Mux7.IN1
E0[0] => Mux7.IN3
E0[1] => Mux6.IN3
E0[2] => Mux5.IN3
E0[3] => Mux4.IN3
E0[4] => Mux3.IN3
E0[5] => Mux2.IN3
E0[6] => Mux1.IN3
E0[7] => Mux0.IN3
E1[0] => Mux7.IN4
E1[1] => Mux6.IN4
E1[2] => Mux5.IN4
E1[3] => Mux4.IN4
E1[4] => Mux3.IN4
E1[5] => Mux2.IN4
E1[6] => Mux1.IN4
E1[7] => Mux0.IN4
E2[0] => Mux7.IN5
E2[1] => Mux6.IN5
E2[2] => Mux5.IN5
E2[3] => Mux4.IN5
E2[4] => Mux3.IN5
E2[5] => Mux2.IN5
E2[6] => Mux1.IN5
E2[7] => Mux0.IN5
output[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|ULA:UnLogArit
A[0] => Equal0.IN7
A[0] => somador:pSOMADOR.input[0]
A[0] => Mux0.IN3
A[0] => Mux0.IN4
A[0] => subtrador:pSUBTRADOR.input[0]
A[0] => somaFlutuante:pSOMADORFLUTUANTE.A[0]
A[0] => multiplicador:pMULTIPLICADOR.A[0]
A[1] => Equal0.IN6
A[1] => somador:pSOMADOR.input[1]
A[1] => Mux11.IN3
A[1] => Mux11.IN4
A[1] => subtrador:pSUBTRADOR.input[1]
A[1] => somaFlutuante:pSOMADORFLUTUANTE.A[1]
A[1] => multiplicador:pMULTIPLICADOR.A[1]
A[2] => Equal0.IN5
A[2] => somador:pSOMADOR.input[2]
A[2] => Mux10.IN3
A[2] => Mux10.IN4
A[2] => subtrador:pSUBTRADOR.input[2]
A[2] => somaFlutuante:pSOMADORFLUTUANTE.A[2]
A[2] => multiplicador:pMULTIPLICADOR.A[2]
A[3] => Equal0.IN4
A[3] => somador:pSOMADOR.input[3]
A[3] => Mux9.IN3
A[3] => Mux9.IN4
A[3] => subtrador:pSUBTRADOR.input[3]
A[3] => somaFlutuante:pSOMADORFLUTUANTE.A[3]
A[3] => multiplicador:pMULTIPLICADOR.A[3]
A[4] => Equal0.IN3
A[4] => somador:pSOMADOR.input[4]
A[4] => Mux8.IN3
A[4] => Mux8.IN4
A[4] => subtrador:pSUBTRADOR.input[4]
A[4] => somaFlutuante:pSOMADORFLUTUANTE.A[4]
A[4] => multiplicador:pMULTIPLICADOR.A[4]
A[5] => Equal0.IN2
A[5] => somador:pSOMADOR.input[5]
A[5] => Mux7.IN3
A[5] => Mux7.IN4
A[5] => subtrador:pSUBTRADOR.input[5]
A[5] => somaFlutuante:pSOMADORFLUTUANTE.A[5]
A[5] => multiplicador:pMULTIPLICADOR.A[5]
A[6] => Equal0.IN1
A[6] => somador:pSOMADOR.input[6]
A[6] => Mux6.IN3
A[6] => Mux6.IN4
A[6] => subtrador:pSUBTRADOR.input[6]
A[6] => somaFlutuante:pSOMADORFLUTUANTE.A[6]
A[6] => multiplicador:pMULTIPLICADOR.A[6]
A[7] => Equal0.IN0
A[7] => somador:pSOMADOR.input[7]
A[7] => Mux5.IN3
A[7] => Mux5.IN4
A[7] => subtrador:pSUBTRADOR.input[7]
A[7] => somaFlutuante:pSOMADORFLUTUANTE.A[7]
A[7] => multiplicador:pMULTIPLICADOR.A[7]
B[0] => Equal0.IN15
B[0] => somador:pSOMADOR.input2[0]
B[0] => Mux0.IN5
B[0] => Mux0.IN6
B[0] => Mux0.IN7
B[0] => Mux0.IN8
B[0] => subtrador:pSUBTRADOR.input2[0]
B[0] => somaFlutuante:pSOMADORFLUTUANTE.B[0]
B[0] => multiplicador:pMULTIPLICADOR.B[0]
B[1] => Equal0.IN14
B[1] => somador:pSOMADOR.input2[1]
B[1] => Mux11.IN5
B[1] => Mux11.IN6
B[1] => Mux11.IN7
B[1] => Mux11.IN8
B[1] => subtrador:pSUBTRADOR.input2[1]
B[1] => somaFlutuante:pSOMADORFLUTUANTE.B[1]
B[1] => multiplicador:pMULTIPLICADOR.B[1]
B[2] => Equal0.IN13
B[2] => somador:pSOMADOR.input2[2]
B[2] => Mux10.IN5
B[2] => Mux10.IN6
B[2] => Mux10.IN7
B[2] => Mux10.IN8
B[2] => subtrador:pSUBTRADOR.input2[2]
B[2] => somaFlutuante:pSOMADORFLUTUANTE.B[2]
B[2] => multiplicador:pMULTIPLICADOR.B[2]
B[3] => Equal0.IN12
B[3] => somador:pSOMADOR.input2[3]
B[3] => Mux9.IN5
B[3] => Mux9.IN6
B[3] => Mux9.IN7
B[3] => Mux9.IN8
B[3] => subtrador:pSUBTRADOR.input2[3]
B[3] => somaFlutuante:pSOMADORFLUTUANTE.B[3]
B[3] => multiplicador:pMULTIPLICADOR.B[3]
B[4] => Equal0.IN11
B[4] => somador:pSOMADOR.input2[4]
B[4] => Mux8.IN5
B[4] => Mux8.IN6
B[4] => Mux8.IN7
B[4] => Mux8.IN8
B[4] => subtrador:pSUBTRADOR.input2[4]
B[4] => somaFlutuante:pSOMADORFLUTUANTE.B[4]
B[4] => multiplicador:pMULTIPLICADOR.B[4]
B[5] => Equal0.IN10
B[5] => somador:pSOMADOR.input2[5]
B[5] => Mux7.IN5
B[5] => Mux7.IN6
B[5] => Mux7.IN7
B[5] => Mux7.IN8
B[5] => subtrador:pSUBTRADOR.input2[5]
B[5] => somaFlutuante:pSOMADORFLUTUANTE.B[5]
B[5] => multiplicador:pMULTIPLICADOR.B[5]
B[6] => Equal0.IN9
B[6] => somador:pSOMADOR.input2[6]
B[6] => Mux6.IN5
B[6] => Mux6.IN6
B[6] => Mux6.IN7
B[6] => Mux6.IN8
B[6] => subtrador:pSUBTRADOR.input2[6]
B[6] => somaFlutuante:pSOMADORFLUTUANTE.B[6]
B[6] => multiplicador:pMULTIPLICADOR.B[6]
B[7] => Equal0.IN8
B[7] => somador:pSOMADOR.input2[7]
B[7] => Mux5.IN5
B[7] => Mux5.IN6
B[7] => Mux5.IN7
B[7] => Mux5.IN8
B[7] => subtrador:pSUBTRADOR.input2[7]
B[7] => somaFlutuante:pSOMADORFLUTUANTE.B[7]
B[7] => multiplicador:pMULTIPLICADOR.B[7]
selector[0] => Mux4.IN18
selector[0] => Mux3.IN19
selector[0] => Mux2.IN19
selector[0] => Mux1.IN19
selector[0] => Mux0.IN12
selector[0] => Mux11.IN12
selector[0] => Mux10.IN12
selector[0] => Mux9.IN12
selector[0] => Mux8.IN12
selector[0] => Mux7.IN12
selector[0] => Mux6.IN12
selector[0] => Mux5.IN12
selector[0] => Mux12.IN18
selector[1] => Mux4.IN17
selector[1] => Mux3.IN18
selector[1] => Mux2.IN18
selector[1] => Mux1.IN18
selector[1] => Mux0.IN11
selector[1] => Mux11.IN11
selector[1] => Mux10.IN11
selector[1] => Mux9.IN11
selector[1] => Mux8.IN11
selector[1] => Mux7.IN11
selector[1] => Mux6.IN11
selector[1] => Mux5.IN11
selector[1] => Mux12.IN17
selector[2] => Mux4.IN16
selector[2] => Mux3.IN17
selector[2] => Mux2.IN17
selector[2] => Mux1.IN17
selector[2] => Mux0.IN10
selector[2] => Mux11.IN10
selector[2] => Mux10.IN10
selector[2] => Mux9.IN10
selector[2] => Mux8.IN10
selector[2] => Mux7.IN10
selector[2] => Mux6.IN10
selector[2] => Mux5.IN10
selector[2] => Mux12.IN16
selector[3] => Mux4.IN15
selector[3] => Mux3.IN16
selector[3] => Mux2.IN16
selector[3] => Mux1.IN16
selector[3] => Mux0.IN9
selector[3] => Mux11.IN9
selector[3] => Mux10.IN9
selector[3] => Mux9.IN9
selector[3] => Mux8.IN9
selector[3] => Mux7.IN9
selector[3] => Mux6.IN9
selector[3] => Mux5.IN9
selector[3] => Mux12.IN15
output[0] <= output[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
zero <= zero$latch.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|ULA:UnLogArit|somador:pSOMADOR
input[0] => result.IN0
input[0] => cout.IN0
input[1] => result.IN0
input[1] => cout.IN1
input[1] => cout.IN0
input[2] => result.IN0
input[2] => cout.IN1
input[2] => cout.IN0
input[3] => result.IN0
input[3] => cout.IN1
input[3] => cout.IN0
input[4] => result.IN0
input[4] => cout.IN1
input[4] => cout.IN0
input[5] => result.IN0
input[5] => cout.IN1
input[5] => cout.IN0
input[6] => result.IN0
input[6] => cout.IN1
input[6] => cout.IN0
input[7] => result.IN0
input[7] => cout.IN1
input[7] => cout.IN0
input2[0] => result.IN1
input2[0] => cout.IN1
input2[1] => result.IN1
input2[1] => cout.IN1
input2[1] => cout.IN1
input2[2] => result.IN1
input2[2] => cout.IN1
input2[2] => cout.IN1
input2[3] => result.IN1
input2[3] => cout.IN1
input2[3] => cout.IN1
input2[4] => result.IN1
input2[4] => cout.IN1
input2[4] => cout.IN1
input2[5] => result.IN1
input2[5] => cout.IN1
input2[5] => cout.IN1
input2[6] => result.IN1
input2[6] => cout.IN1
input2[6] => cout.IN1
input2[7] => result.IN1
input2[7] => cout.IN1
input2[7] => cout.IN1
overflow <= cout.DB_MAX_OUTPUT_PORT_TYPE
output[0] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= result.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|ULA:UnLogArit|subtrador:pSUBTRADOR
input[0] => somador:G3.input[0]
input[1] => somador:G3.input[1]
input[2] => somador:G3.input[2]
input[3] => somador:G3.input[3]
input[4] => somador:G3.input[4]
input[5] => somador:G3.input[5]
input[6] => somador:G3.input[6]
input[7] => somador:G3.input[7]
input2[0] => somador:G2.input[0]
input2[1] => somador:G2.input[1]
input2[2] => somador:G2.input[2]
input2[3] => somador:G2.input[3]
input2[4] => somador:G2.input[4]
input2[5] => somador:G2.input[5]
input2[6] => somador:G2.input[6]
input2[7] => somador:G2.input[7]
output[0] <= somador:G3.output[0]
output[1] <= somador:G3.output[1]
output[2] <= somador:G3.output[2]
output[3] <= somador:G3.output[3]
output[4] <= somador:G3.output[4]
output[5] <= somador:G3.output[5]
output[6] <= somador:G3.output[6]
output[7] <= somador:G3.output[7]


|NEO|blocoOperativo:operavito|ULA:UnLogArit|subtrador:pSUBTRADOR|somador:G2
input[0] => result.IN0
input[0] => cout.IN0
input[1] => result.IN0
input[1] => cout.IN1
input[1] => cout.IN0
input[2] => result.IN0
input[2] => cout.IN1
input[2] => cout.IN0
input[3] => result.IN0
input[3] => cout.IN1
input[3] => cout.IN0
input[4] => result.IN0
input[4] => cout.IN1
input[4] => cout.IN0
input[5] => result.IN0
input[5] => cout.IN1
input[5] => cout.IN0
input[6] => result.IN0
input[6] => cout.IN1
input[6] => cout.IN0
input[7] => result.IN0
input[7] => cout.IN1
input[7] => cout.IN0
input2[0] => result.IN1
input2[0] => cout.IN1
input2[1] => result.IN1
input2[1] => cout.IN1
input2[1] => cout.IN1
input2[2] => result.IN1
input2[2] => cout.IN1
input2[2] => cout.IN1
input2[3] => result.IN1
input2[3] => cout.IN1
input2[3] => cout.IN1
input2[4] => result.IN1
input2[4] => cout.IN1
input2[4] => cout.IN1
input2[5] => result.IN1
input2[5] => cout.IN1
input2[5] => cout.IN1
input2[6] => result.IN1
input2[6] => cout.IN1
input2[6] => cout.IN1
input2[7] => result.IN1
input2[7] => cout.IN1
input2[7] => cout.IN1
overflow <= cout.DB_MAX_OUTPUT_PORT_TYPE
output[0] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= result.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|ULA:UnLogArit|subtrador:pSUBTRADOR|somador:G3
input[0] => result.IN0
input[0] => cout.IN0
input[1] => result.IN0
input[1] => cout.IN1
input[1] => cout.IN0
input[2] => result.IN0
input[2] => cout.IN1
input[2] => cout.IN0
input[3] => result.IN0
input[3] => cout.IN1
input[3] => cout.IN0
input[4] => result.IN0
input[4] => cout.IN1
input[4] => cout.IN0
input[5] => result.IN0
input[5] => cout.IN1
input[5] => cout.IN0
input[6] => result.IN0
input[6] => cout.IN1
input[6] => cout.IN0
input[7] => result.IN0
input[7] => cout.IN1
input[7] => cout.IN0
input2[0] => result.IN1
input2[0] => cout.IN1
input2[1] => result.IN1
input2[1] => cout.IN1
input2[1] => cout.IN1
input2[2] => result.IN1
input2[2] => cout.IN1
input2[2] => cout.IN1
input2[3] => result.IN1
input2[3] => cout.IN1
input2[3] => cout.IN1
input2[4] => result.IN1
input2[4] => cout.IN1
input2[4] => cout.IN1
input2[5] => result.IN1
input2[5] => cout.IN1
input2[5] => cout.IN1
input2[6] => result.IN1
input2[6] => cout.IN1
input2[6] => cout.IN1
input2[7] => result.IN1
input2[7] => cout.IN1
input2[7] => cout.IN1
overflow <= cout.DB_MAX_OUTPUT_PORT_TYPE
output[0] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= result.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= result.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|ULA:UnLogArit|somaFlutuante:pSOMADORFLUTUANTE
A[0] => significandomaior.DATAA
A[0] => significandomaior[0].DATAB
A[1] => significandomaior.DATAA
A[1] => significandomaior[1].DATAB
A[1] => significandomenor.DATAB
A[2] => significandomaior.DATAA
A[2] => significandomaior[2].DATAB
A[2] => significandomenor.DATAB
A[3] => significandomaior.DATAA
A[3] => significandomaior[3].DATAB
A[3] => significandomenor.DATAB
A[4] => significandomaior.DATAA
A[4] => significandomaior[4].DATAB
A[4] => significandomenor.DATAB
A[5] => LessThan0.IN3
A[5] => LessThan1.IN3
A[5] => Add1.IN6
A[5] => expoentemaior.DATAA
A[5] => expoentemaior[0].DATAB
A[6] => LessThan0.IN2
A[6] => LessThan1.IN2
A[6] => Add1.IN5
A[6] => expoentemaior.DATAA
A[6] => expoentemaior[1].DATAB
A[7] => LessThan0.IN1
A[7] => LessThan1.IN1
A[7] => Add1.IN4
A[7] => expoentemaior.DATAA
A[7] => expoentemaior[2].DATAB
B[0] => significandomaior.DATAB
B[0] => significandomenor.DATAA
B[1] => significandomaior.DATAB
B[1] => significandomenor.DATAA
B[1] => significandomenor.DATAB
B[2] => significandomaior.DATAB
B[2] => significandomenor.DATAA
B[2] => significandomenor.DATAB
B[3] => significandomaior.DATAB
B[3] => significandomenor.DATAA
B[3] => significandomenor.DATAB
B[4] => significandomaior.DATAB
B[4] => significandomenor.DATAA
B[4] => significandomenor.DATAB
B[5] => LessThan0.IN6
B[5] => Add0.IN6
B[5] => LessThan1.IN6
B[5] => expoentemaior.DATAB
B[5] => expoentemenor.DATAA
B[6] => LessThan0.IN5
B[6] => Add0.IN5
B[6] => LessThan1.IN5
B[6] => expoentemaior.DATAB
B[6] => expoentemenor.DATAA
B[7] => LessThan0.IN4
B[7] => Add0.IN4
B[7] => LessThan1.IN4
B[7] => expoentemaior.DATAB
B[7] => expoentemenor.DATAA
S[0] <= S.DB_MAX_OUTPUT_PORT_TYPE
S[1] <= S.DB_MAX_OUTPUT_PORT_TYPE
S[2] <= S.DB_MAX_OUTPUT_PORT_TYPE
S[3] <= S.DB_MAX_OUTPUT_PORT_TYPE
S[4] <= S.DB_MAX_OUTPUT_PORT_TYPE
S[5] <= S.DB_MAX_OUTPUT_PORT_TYPE
S[6] <= S.DB_MAX_OUTPUT_PORT_TYPE
S[7] <= S.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|ULA:UnLogArit|multiplicador:pMULTIPLICADOR
A[0] => Add3.IN18
A[0] => Add5.IN18
A[0] => Add7.IN18
A[0] => Add0.IN8
A[1] => Add3.IN17
A[1] => Add5.IN17
A[1] => Add7.IN17
A[1] => Add0.IN7
A[2] => Add3.IN16
A[2] => Add5.IN16
A[2] => Add7.IN16
A[2] => Add0.IN6
A[3] => Add3.IN15
A[3] => Add5.IN15
A[3] => Add7.IN15
A[3] => Add0.IN5
A[4] => ~NO_FANOUT~
A[5] => ~NO_FANOUT~
A[6] => ~NO_FANOUT~
A[7] => ~NO_FANOUT~
B[0] => Add1.IN12
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[0] => produto.OUTPUTSELECT
B[1] => Add1.IN11
B[1] => produto.DATAA
B[1] => produto.DATAB
B[2] => Add1.IN10
B[2] => produto.DATAA
B[2] => produto.DATAB
B[3] => Add1.IN9
B[3] => produto.DATAA
B[3] => produto.DATAB
B[4] => ~NO_FANOUT~
B[5] => ~NO_FANOUT~
B[6] => ~NO_FANOUT~
B[7] => ~NO_FANOUT~
S[0] <= produto.DB_MAX_OUTPUT_PORT_TYPE
S[1] <= produto.DB_MAX_OUTPUT_PORT_TYPE
S[2] <= produto.DB_MAX_OUTPUT_PORT_TYPE
S[3] <= produto.DB_MAX_OUTPUT_PORT_TYPE
S[4] <= produto.DB_MAX_OUTPUT_PORT_TYPE
S[5] <= produto.DB_MAX_OUTPUT_PORT_TYPE
S[6] <= produto.DB_MAX_OUTPUT_PORT_TYPE
S[7] <= produto.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|registrador:regSaidaUla
clock => output[0]~reg0.CLK
clock => output[1]~reg0.CLK
clock => output[2]~reg0.CLK
clock => output[3]~reg0.CLK
clock => output[4]~reg0.CLK
clock => output[5]~reg0.CLK
clock => output[6]~reg0.CLK
clock => output[7]~reg0.CLK
enable => output[0]~reg0.ENA
enable => output[1]~reg0.ENA
enable => output[2]~reg0.ENA
enable => output[3]~reg0.ENA
enable => output[4]~reg0.ENA
enable => output[5]~reg0.ENA
enable => output[6]~reg0.ENA
enable => output[7]~reg0.ENA
input[0] => output[0]~reg0.DATAIN
input[1] => output[1]~reg0.DATAIN
input[2] => output[2]~reg0.DATAIN
input[3] => output[3]~reg0.DATAIN
input[4] => output[4]~reg0.DATAIN
input[5] => output[5]~reg0.DATAIN
input[6] => output[6]~reg0.DATAIN
input[7] => output[7]~reg0.DATAIN
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|MemoriaDados:memoriadedados
clock => memoria~10.CLK
clock => memoria~0.CLK
clock => memoria~1.CLK
clock => memoria~2.CLK
clock => memoria~3.CLK
clock => memoria~4.CLK
clock => memoria~5.CLK
clock => memoria~6.CLK
clock => memoria~7.CLK
clock => memoria~8.CLK
clock => memoria~9.CLK
clock => dataout[0]~reg0.CLK
clock => dataout[1]~reg0.CLK
clock => dataout[2]~reg0.CLK
clock => dataout[3]~reg0.CLK
clock => dataout[4]~reg0.CLK
clock => dataout[5]~reg0.CLK
clock => dataout[6]~reg0.CLK
clock => dataout[7]~reg0.CLK
clock => memoria.CLK0
MemEscrita => memoria~10.DATAIN
MemEscrita => dataout[0]~reg0.ENA
MemEscrita => dataout[1]~reg0.ENA
MemEscrita => dataout[2]~reg0.ENA
MemEscrita => dataout[3]~reg0.ENA
MemEscrita => dataout[4]~reg0.ENA
MemEscrita => dataout[5]~reg0.ENA
MemEscrita => dataout[6]~reg0.ENA
MemEscrita => dataout[7]~reg0.ENA
MemEscrita => memoria.WE
endereco[0] => memoria~1.DATAIN
endereco[0] => memoria.WADDR
endereco[0] => memoria.RADDR
endereco[1] => memoria~0.DATAIN
endereco[1] => memoria.WADDR1
endereco[1] => memoria.RADDR1
datain[0] => memoria~9.DATAIN
datain[0] => memoria.DATAIN
datain[1] => memoria~8.DATAIN
datain[1] => memoria.DATAIN1
datain[2] => memoria~7.DATAIN
datain[2] => memoria.DATAIN2
datain[3] => memoria~6.DATAIN
datain[3] => memoria.DATAIN3
datain[4] => memoria~5.DATAIN
datain[4] => memoria.DATAIN4
datain[5] => memoria~4.DATAIN
datain[5] => memoria.DATAIN5
datain[6] => memoria~3.DATAIN
datain[6] => memoria.DATAIN6
datain[7] => memoria~2.DATAIN
datain[7] => memoria.DATAIN7
dataout[0] <= dataout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataout[1] <= dataout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataout[2] <= dataout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataout[3] <= dataout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataout[4] <= dataout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataout[5] <= dataout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataout[6] <= dataout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataout[7] <= dataout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|registrador:regMDR
clock => output[0]~reg0.CLK
clock => output[1]~reg0.CLK
clock => output[2]~reg0.CLK
clock => output[3]~reg0.CLK
clock => output[4]~reg0.CLK
clock => output[5]~reg0.CLK
clock => output[6]~reg0.CLK
clock => output[7]~reg0.CLK
enable => output[0]~reg0.ENA
enable => output[1]~reg0.ENA
enable => output[2]~reg0.ENA
enable => output[3]~reg0.ENA
enable => output[4]~reg0.ENA
enable => output[5]~reg0.ENA
enable => output[6]~reg0.ENA
enable => output[7]~reg0.ENA
input[0] => output[0]~reg0.DATAIN
input[1] => output[1]~reg0.DATAIN
input[2] => output[2]~reg0.DATAIN
input[3] => output[3]~reg0.DATAIN
input[4] => output[4]~reg0.DATAIN
input[5] => output[5]~reg0.DATAIN
input[6] => output[6]~reg0.DATAIN
input[7] => output[7]~reg0.DATAIN
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|mux_2x8:muxescritanoBDR
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
selector => output.OUTPUTSELECT
E0[0] => output.DATAB
E0[1] => output.DATAB
E0[2] => output.DATAB
E0[3] => output.DATAB
E0[4] => output.DATAB
E0[5] => output.DATAB
E0[6] => output.DATAB
E0[7] => output.DATAB
E1[0] => output.DATAA
E1[1] => output.DATAA
E1[2] => output.DATAA
E1[3] => output.DATAA
E1[4] => output.DATAA
E1[5] => output.DATAA
E1[6] => output.DATAA
E1[7] => output.DATAA
output[0] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output.DB_MAX_OUTPUT_PORT_TYPE


|NEO|blocoOperativo:operavito|mux_3x8:muxPCfonte
selector[0] => Mux0.IN2
selector[0] => Mux1.IN2
selector[0] => Mux2.IN2
selector[0] => Mux3.IN2
selector[0] => Mux4.IN2
selector[0] => Mux5.IN2
selector[0] => Mux6.IN2
selector[0] => Mux7.IN2
selector[1] => Mux0.IN1
selector[1] => Mux1.IN1
selector[1] => Mux2.IN1
selector[1] => Mux3.IN1
selector[1] => Mux4.IN1
selector[1] => Mux5.IN1
selector[1] => Mux6.IN1
selector[1] => Mux7.IN1
E0[0] => Mux7.IN3
E0[1] => Mux6.IN3
E0[2] => Mux5.IN3
E0[3] => Mux4.IN3
E0[4] => Mux3.IN3
E0[5] => Mux2.IN3
E0[6] => Mux1.IN3
E0[7] => Mux0.IN3
E1[0] => Mux7.IN4
E1[1] => Mux6.IN4
E1[2] => Mux5.IN4
E1[3] => Mux4.IN4
E1[4] => Mux3.IN4
E1[5] => Mux2.IN4
E1[6] => Mux1.IN4
E1[7] => Mux0.IN4
E2[0] => Mux7.IN5
E2[1] => Mux6.IN5
E2[2] => Mux5.IN5
E2[3] => Mux4.IN5
E2[4] => Mux3.IN5
E2[5] => Mux2.IN5
E2[6] => Mux1.IN5
E2[7] => Mux0.IN5
output[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


